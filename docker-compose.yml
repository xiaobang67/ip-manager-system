services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: ip-management-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ip_management_system
      MYSQL_USER: ipuser
      MYSQL_PASSWORD: ippassword
      # 字符编码设置
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --init-connect='SET NAMES utf8mb4;'
      --innodb_flush_log_at_trx_commit=0
      --sync_binlog=0
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/init_admin.sql:/docker-entrypoint-initdb.d/init_admin.sql
    networks:
      - ip-management-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ip-management-backend
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: ipuser
      DB_PASSWORD: ippassword
      DB_NAME: ip_management_system
      API_HOST: 0.0.0.0
      API_PORT: 8000
      DEBUG_MODE: "false"
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - ip-management-net
    volumes:
      - ./backend/logs:/app/logs

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ip-management-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ip-management-net

volumes:
  mysql_data:

networks:
  ip-management-net:
    driver: bridge