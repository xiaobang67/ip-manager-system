# 前端生产环境Dockerfile

# Build stage
FROM node:16-alpine AS build-stage

# 设置工作目录
WORKDIR /app

# 复制package文件
COPY package*.json ./

# 安装依赖
RUN npm install --only=production

# 复制源代码 (排除node_modules)
COPY . .
RUN rm -rf node_modules && npm install

# 构建应用
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine AS production-stage

# 复制构建产物到临时目录
COPY --from=build-stage /app/dist /tmp/dist

# 复制Nginx配置
COPY nginx.conf /etc/nginx/nginx.conf

# 创建启动脚本
RUN echo '#!/bin/sh' > /docker-entrypoint-custom.sh && \
    echo 'cp -r /tmp/dist/* /app/dist/ 2>/dev/null || true' >> /docker-entrypoint-custom.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint-custom.sh && \
    chmod +x /docker-entrypoint-custom.sh

# 暴露端口
EXPOSE 80

# 启动脚本
CMD ["/docker-entrypoint-custom.sh"]