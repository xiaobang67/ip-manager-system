import{s as p,E as _,_ as T,l as I,r as m,o as f,c as F,a as d,w as y,b as h,f as $,z as C,d as v,F as q,C as z,x as A}from"./index-1a649ac5-1758176310446.js";const b={createField(l){return p.post("/custom-fields/",l)},getFields(l=null){const e=l?{entity_type:l}:{};return p.get("/custom-fields/",{params:e})},getFieldById(l){return p.get(`/custom-fields/${l}`)},updateField(l,e){return p.put(`/custom-fields/${l}`,e)},deleteField(l){return p.delete(`/custom-fields/${l}`)},getEntityFields(l,e){return p.get(`/custom-fields/entity/${l}/${e}`)},updateEntityFields(l,e,s){return p.put(`/custom-fields/entity/${l}/${e}`,s)},deleteEntityFields(l,e){return p.delete(`/custom-fields/entity/${l}/${e}`)},setFieldValue(l,e,s,r){return p.post("/custom-fields/values",null,{params:{field_id:l,entity_id:e,entity_type:s,value:r}})}};class D{constructor(){this.debugMode=!1}log(e,s=null){}error(e,s=null){}async safeGetFields(e=null){var s,r,a;try{this.log("开始获取自定义字段",{entityType:e});const i=await b.getFields(e);if(this.log("API响应",i),!i)return this.error("API返回空响应"),[];let o=[];if(Array.isArray(i))o=i;else if(i.data&&Array.isArray(i.data))o=i.data;else if(i.fields&&Array.isArray(i.fields))o=i.fields;else return this.error("无法识别的响应格式",i),[];const n=o.map(u=>this.normalizeField(u));return this.log("标准化后的字段",n),n}catch(i){return this.error("获取自定义字段失败",i),((s=i.response)==null?void 0:s.status)===404?_.warning("自定义字段功能暂不可用"):((r=i.response)==null?void 0:r.status)===401?_.error("请先登录"):(a=i.message)!=null&&a.includes("name")?_.error("自定义字段数据格式错误，请联系管理员"):_.error("获取自定义字段失败，请稍后重试"),[]}}async safeGetEntityFields(e,s){var r;try{this.log("开始获取实体自定义字段",{entityType:e,entityId:s});const a=await b.getEntityFields(e,s);if(this.log("实体字段API响应",a),!a)return this.error("实体字段API返回空响应"),{fields:[]};let i={fields:[]};return a.data?i=a.data:a.fields?i={fields:a.fields}:Array.isArray(a)&&(i={fields:a}),Array.isArray(i.fields)||(this.error("字段数据不是数组格式",i.fields),i.fields=[]),i.fields=i.fields.map(o=>this.normalizeField(o)),this.log("标准化后的实体字段",i),i}catch(a){return this.error("获取实体自定义字段失败",a),(r=a.message)!=null&&r.includes("name")?_.error("自定义字段数据格式错误，请联系管理员"):_.error("获取字段信息失败"),{fields:[]}}}normalizeField(e){if(!e||typeof e!="object")return this.error("无效的字段数据",e),{id:0,field_name:"未知字段",field_type:"text",entity_type:"ip",is_required:!1,value:null};const s={id:e.id||0,field_name:e.field_name||e.name||"未知字段",field_type:e.field_type||e.type||"text",entity_type:e.entity_type||"ip",is_required:!!(e.is_required||e.required),field_options:e.field_options||e.options||null,created_at:e.created_at||e.createdAt||new Date().toISOString(),value:e.value||null};return["text","number","date","select"].includes(s.field_type)||(this.error("无效的字段类型",s.field_type),s.field_type="text"),["ip","subnet"].includes(s.entity_type)||(this.error("无效的实体类型",s.entity_type),s.entity_type="ip"),s}validateField(e){const s=[];return e.id||s.push("缺少字段ID"),(!e.field_name||e.field_name.trim()==="")&&s.push("缺少字段名称"),e.field_type||s.push("缺少字段类型"),e.entity_type||s.push("缺少实体类型"),s.length>0?(this.error("字段验证失败",{field:e,errors:s}),!1):!0}repairField(e){return this.validateField(e)?e:(this.log("尝试修复字段数据",e),this.normalizeField(e))}repairFields(e){return Array.isArray(e)?e.map(s=>this.repairField(s)).filter(s=>s.id>0):(this.error("字段数据不是数组",e),[])}async checkApiHealth(){var e,s;try{this.log("检查自定义字段API健康状态");const r=await b.getFields();return this.log("API健康检查通过",r),!0}catch(r){return this.error("API健康检查失败",r),((e=r.response)==null?void 0:e.status)===404?_.warning("自定义字段API不可用，可能是后端服务未启动"):((s=r.response)==null?void 0:s.status)>=500?_.error("服务器错误，请联系管理员"):_.error("网络连接错误，请检查网络设置"),!1}}}const P=new D,w=l=>P.safeGetFields(l),B=(l,e)=>P.safeGetEntityFields(l,e);const G={name:"CustomFieldsTest",setup(){const l=I(null),e=I([]),s=I([]),r=(i,o,n,u=null)=>{e.value.push({test:i,success:o,message:n,data:u,timestamp:new Date().toLocaleString()})};return{testStatus:l,testResults:e,customFields:s,runTests:async()=>{var i,o;l.value={title:"正在运行测试...",type:"info",description:"请稍候，正在检查自定义字段功能"},e.value=[],s.value=[];try{const n=await P.checkApiHealth();if(r("API健康检查",n,n?"API连接正常":"API连接失败"),!n){l.value={title:"测试失败",type:"error",description:"API连接失败，无法继续测试"};return}try{const t=await w();r("获取所有自定义字段",!0,`成功获取 ${t.length} 个字段`,t),s.value=t}catch(t){r("获取所有自定义字段",!1,`获取失败: ${t.message}`,t)}try{const t=await w("ip");r("获取IP类型字段",!0,`成功获取 ${t.length} 个IP字段`,t)}catch(t){r("获取IP类型字段",!1,`获取失败: ${t.message}`,t)}try{const t=await w("subnet");r("获取网段类型字段",!0,`成功获取 ${t.length} 个网段字段`,t)}catch(t){r("获取网段类型字段",!1,`获取失败: ${t.message}`,t)}try{const t=await B("ip",1);r("获取实体字段",!0,`成功获取实体字段，包含 ${t.fields.length} 个字段`,t)}catch(t){r("获取实体字段",!1,`获取失败: ${t.message}`,t)}try{const t=await b.getFields();r("直接API调用",!0,"直接API调用成功",t)}catch(t){r("直接API调用",!1,`直接API调用失败: ${t.message}`,{error:t.message,response:(i=t.response)==null?void 0:i.data,status:(o=t.response)==null?void 0:o.status})}const u=e.value.filter(t=>t.success).length,g=e.value.length;u===g?l.value={title:"所有测试通过",type:"success",description:`${u}/${g} 个测试成功通过`}:l.value={title:"部分测试失败",type:"warning",description:`${u}/${g} 个测试通过，请检查失败的测试项`}}catch(n){console.error("测试过程中发生错误:",n),l.value={title:"测试过程出错",type:"error",description:`测试过程中发生错误: ${n.message}`},r("测试过程",!1,`测试过程出错: ${n.message}`,n)}}}}},N={class:"custom-fields-test"},R={class:"card-header"},V={class:"test-results"},H={key:1,class:"results-list"},L={key:0,class:"test-data"},M={key:2,class:"fields-preview"};function O(l,e,s,r,a,i){const o=m("el-button"),n=m("el-alert"),u=m("el-timeline-item"),g=m("el-timeline"),t=m("el-table-column"),k=m("el-tag"),x=m("el-table"),E=m("el-card");return f(),F("div",N,[d(E,{class:"box-card"},{header:y(()=>[h("div",R,[e[1]||(e[1]=h("span",null,"自定义字段测试",-1)),d(o,{type:"primary",onClick:r.runTests},{default:y(()=>[...e[0]||(e[0]=[$("运行测试",-1)])]),_:1},8,["onClick"])])]),default:y(()=>[h("div",V,[r.testStatus?(f(),C(n,{key:0,title:r.testStatus.title,type:r.testStatus.type,description:r.testStatus.description,"show-icon":"",closable:!1},null,8,["title","type","description"])):v("",!0),r.testResults.length>0?(f(),F("div",H,[e[2]||(e[2]=h("h3",null,"测试结果：",-1)),d(g,null,{default:y(()=>[(f(!0),F(q,null,z(r.testResults,(c,S)=>(f(),C(u,{key:S,type:c.success?"success":"danger",timestamp:c.timestamp},{default:y(()=>[h("h4",null,A(c.test),1),h("p",null,A(c.message),1),c.data?(f(),F("pre",L,A(JSON.stringify(c.data,null,2)),1)):v("",!0)]),_:2},1032,["type","timestamp"]))),128))]),_:1})])):v("",!0),r.customFields.length>0?(f(),F("div",M,[e[3]||(e[3]=h("h3",null,"自定义字段预览：",-1)),d(x,{data:r.customFields,style:{width:"100%"}},{default:y(()=>[d(t,{prop:"id",label:"ID",width:"80"}),d(t,{prop:"field_name",label:"字段名称"}),d(t,{prop:"field_type",label:"字段类型"}),d(t,{prop:"entity_type",label:"实体类型"}),d(t,{prop:"is_required",label:"必填"},{default:y(c=>[d(k,{type:c.row.is_required?"danger":"info"},{default:y(()=>[$(A(c.row.is_required?"是":"否"),1)]),_:2},1032,["type"])]),_:1})]),_:1},8,["data"])])):v("",!0)])]),_:1})])}const J=T(G,[["render",O],["__scopeId","data-v-db3466cf"]]);export{J as default};
