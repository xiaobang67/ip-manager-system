version: '3.8'

services:
  # 测试数据库
  test-mysql:
    image: mysql:8.0
    container_name: ipam-test-mysql
    environment:
      MYSQL_ROOT_PASSWORD: testroot123
      MYSQL_DATABASE: ipam_test
      MYSQL_USER: ipam_test
      MYSQL_PASSWORD: testpass123
    ports:
      - "3307:3306"
    volumes:
      - test_mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 测试Redis
  test-redis:
    image: redis:6-alpine
    container_name: ipam-test-redis
    ports:
      - "6380:6379"
    volumes:
      - test_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 10s
      retries: 5

  # 测试后端
  test-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ipam-test-backend
    environment:
      - DATABASE_URL=mysql+aiomysql://ipam_test:testpass123@test-mysql:3306/ipam_test
      - REDIS_URL=redis://test-redis:6379
      - SECRET_KEY=test-secret-key-for-testing-only
      - TESTING=true
    ports:
      - "8001:8000"
    depends_on:
      test-mysql:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    volumes:
      - ./backend:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 10s
      retries: 5

  # 测试前端
  test-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ipam-test-frontend
    environment:
      - VITE_API_BASE_URL=http://test-backend:8000
      - NODE_ENV=test
    ports:
      - "3001:80"
    depends_on:
      test-backend:
        condition: service_healthy
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public

volumes:
  test_mysql_data:
  test_redis_data: